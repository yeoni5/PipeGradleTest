plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id "com.github.node-gradle.node" version '4.0.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task appNpmInstall(type: NpmTask) {
  dependsOn "npmSetup"
  description = "Installs dependencies from package.json"
  workingDir = file("${projectDir}/src/main/resources/static");
  args = ["install"]
}

// React build 설정
def reactAppDir = "$projectDir/src/main/front"

processResources {
  dependsOn "copyReactFile"
  //dependsOn "appNpmInstall"
}


task copyReactFile(type: Copy) {
    dependsOn "buildReact"
    from "$reactAppDir/build"
    //into "$buildDir/resources/main/static"
	into "$projectDir/src/main/resources/static/"
}

task buildReact(type: Exec) {
  dependsOn "installReact"
  workingDir "$reactAppDir"
  inputs.dir "$reactAppDir"
  group = BasePlugin.BUILD_GROUP
  if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {	
    commandLine "npm.cmd", "run-script", "build"
  } else {	
    commandLine "npm", "run-script", "build"
  }
}

task installReact(type: Exec) {
  workingDir "$reactAppDir"
  inputs.dir "$reactAppDir"
  group = BasePlugin.BUILD_GROUP
  if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    commandLine "npm.cmd", "audit", "fix"
    commandLine "npm.cmd", "install"
  } else {
    commandLine "npm", "audit", "fix"
    commandLine "npm", "install"
  }
}
